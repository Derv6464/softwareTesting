[*] Start mutation process:
   - targets: constaints
   - tests: tests
[*] 14 tests passed:
   - tests [11.40945 s]
[*] Start mutants generation and execution:
   - [#   1] AOD constaints: 
--------------------------------------------------------------------------------
   75:         passes = False
   76:     if not (checkFullMoon(booking[0], booking[1])):
   77:         errorMSG += 'book not on a full moon, '
   78:         passes = False
-  79:     return [passes, errorMSG[:-2]]
+  79:     return [passes, errorMSG[:2]]
   80: 
   81: 
   82: def form2Checks(booking):
   83:     
--------------------------------------------------------------------------------
[11.66917 s] survived
   - [#   2] AOR constaints: 
--------------------------------------------------------------------------------
   75:         passes = False
   76:     if not (checkFullMoon(booking[0], booking[1])):
   77:         errorMSG += 'book not on a full moon, '
   78:         passes = False
-  79:     return [passes, errorMSG[:-2]]
+  79:     return [passes, errorMSG[:+2]]
   80: 
   81: 
   82: def form2Checks(booking):
   83:     
--------------------------------------------------------------------------------
[11.45242 s] survived
   - [#   3] AOR constaints: 
--------------------------------------------------------------------------------
  182:     elif meetLength == 2:
  183:         for i in usableTimes[:9]:
  184:             for j in daysBookings:
  185:                 if (j[7] == i or j[7] == str(
- 186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
+ 186:                     (datetime.strptime(i, '%H:%M') - timedelta(hours=1)).strftime(
  187:                     '%H:%M'))):
  188:                     
  189:                     
  190:                     addTime = False
--------------------------------------------------------------------------------
[11.52662 s] survived
   - [#   4] AOR constaints: 
--------------------------------------------------------------------------------
  197:                 if \
  198:                     (j[7] == i or \
  199:                     j[7] == \
  200:                     str(
- 201:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
+ 201:                     (datetime.strptime(i, '%H:%M') - timedelta(hours=1)).strftime(
  202:                     '%H:%M')) or \
  203:                     \
  204:                     \
  205:                     j[7] == \
--------------------------------------------------------------------------------
[11.84732 s] survived
   - [#   5] AOR constaints: 
--------------------------------------------------------------------------------
  203:                     \
  204:                     \
  205:                     j[7] == \
  206:                     str(
- 207:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=2)).strftime(
+ 207:                     (datetime.strptime(i, '%H:%M') - timedelta(hours=2)).strftime(
  208:                     '%H:%M'))):
  209:                     
  210:                     
  211:                     
--------------------------------------------------------------------------------
[11.48249 s] survived
   - [#   6] AOR constaints: 
--------------------------------------------------------------------------------
  220:     
  221:     d = open('bookings.csv', 'a')
  222:     for i in range(int(booking[3][0])):
  223:         d.write('\n')
- 224:         lenght = str(int(str(booking[3][0])) - i) + ' hours'
+ 224:         lenght = str(int(str(booking[3][0])) + i) + ' hours'
  225:         time = str(
  226:             (datetime.strptime(booking[7], '%H:%M') + timedelta(hours=i)).strftime(
  227:             '%H:%M'))
  228:         
--------------------------------------------------------------------------------
[11.43832 s] survived
   - [#   7] AOR constaints: 
--------------------------------------------------------------------------------
  220:     
  221:     d = open('bookings.csv', 'a')
  222:     for i in range(int(booking[3][0])):
  223:         d.write('\n')
- 224:         lenght = str(int(str(booking[3][0])) - i) + ' hours'
+ 224:         lenght = str(int(str(booking[3][0])) - i) - ' hours'
  225:         time = str(
  226:             (datetime.strptime(booking[7], '%H:%M') + timedelta(hours=i)).strftime(
  227:             '%H:%M'))
  228:         
--------------------------------------------------------------------------------
[11.48748 s] survived
   - [#   8] AOR constaints: 
--------------------------------------------------------------------------------
  222:     for i in range(int(booking[3][0])):
  223:         d.write('\n')
  224:         lenght = str(int(str(booking[3][0])) - i) + ' hours'
  225:         time = str(
- 226:             (datetime.strptime(booking[7], '%H:%M') + timedelta(hours=i)).strftime(
+ 226:             (datetime.strptime(booking[7], '%H:%M') - timedelta(hours=i)).strftime(
  227:             '%H:%M'))
  228:         
  229:         
  230:         d.write(
--------------------------------------------------------------------------------
[11.52404 s] survived
   - [#   9] AOR constaints: 
--------------------------------------------------------------------------------
  227:             '%H:%M'))
  228:         
  229:         
  230:         d.write(
- 231:             (((((((((((((str(booking[0].name) + \
+ 231:             (((((((((((((str(booking[0].name) - \
  232:             ',') + \
  233:             str(booking[1])) + \
  234:             ',') + \
  235:             str(booking[2])) + \
--------------------------------------------------------------------------------
[11.40261 s] survived
   - [#  10] AOR constaints: 
--------------------------------------------------------------------------------
  228:         
  229:         
  230:         d.write(
  231:             (((((((((((((str(booking[0].name) + \
- 232:             ',') + \
+ 232:             ',') - \
  233:             str(booking[1])) + \
  234:             ',') + \
  235:             str(booking[2])) + \
  236:             ',') + \
--------------------------------------------------------------------------------
[11.47013 s] survived
   - [#  11] AOR constaints: 
--------------------------------------------------------------------------------
  229:         
  230:         d.write(
  231:             (((((((((((((str(booking[0].name) + \
  232:             ',') + \
- 233:             str(booking[1])) + \
+ 233:             str(booking[1])) - \
  234:             ',') + \
  235:             str(booking[2])) + \
  236:             ',') + \
  237:             lenght) + \
--------------------------------------------------------------------------------
[11.43388 s] survived
   - [#  12] AOR constaints: 
--------------------------------------------------------------------------------
  230:         d.write(
  231:             (((((((((((((str(booking[0].name) + \
  232:             ',') + \
  233:             str(booking[1])) + \
- 234:             ',') + \
+ 234:             ',') - \
  235:             str(booking[2])) + \
  236:             ',') + \
  237:             lenght) + \
  238:             ',') + \
--------------------------------------------------------------------------------
[11.48018 s] survived
   - [#  13] AOR constaints: 
--------------------------------------------------------------------------------
  231:             (((((((((((((str(booking[0].name) + \
  232:             ',') + \
  233:             str(booking[1])) + \
  234:             ',') + \
- 235:             str(booking[2])) + \
+ 235:             str(booking[2])) - \
  236:             ',') + \
  237:             lenght) + \
  238:             ',') + \
  239:             str(booking[4])) + \
--------------------------------------------------------------------------------
[11.73396 s] survived
   - [#  14] AOR constaints: 
--------------------------------------------------------------------------------
  232:             ',') + \
  233:             str(booking[1])) + \
  234:             ',') + \
  235:             str(booking[2])) + \
- 236:             ',') + \
+ 236:             ',') - \
  237:             lenght) + \
  238:             ',') + \
  239:             str(booking[4])) + \
  240:             ',') + \
--------------------------------------------------------------------------------
[11.49725 s] survived
   - [#  15] AOR constaints: 
--------------------------------------------------------------------------------
  233:             str(booking[1])) + \
  234:             ',') + \
  235:             str(booking[2])) + \
  236:             ',') + \
- 237:             lenght) + \
+ 237:             lenght) - \
  238:             ',') + \
  239:             str(booking[4])) + \
  240:             ',') + \
  241:             str(booking[5])) + \
--------------------------------------------------------------------------------
[11.49265 s] survived
   - [#  16] AOR constaints: 
--------------------------------------------------------------------------------
  234:             ',') + \
  235:             str(booking[2])) + \
  236:             ',') + \
  237:             lenght) + \
- 238:             ',') + \
+ 238:             ',') - \
  239:             str(booking[4])) + \
  240:             ',') + \
  241:             str(booking[5])) + \
  242:             ',') + \
--------------------------------------------------------------------------------
[11.46314 s] survived
   - [#  17] AOR constaints: 
--------------------------------------------------------------------------------
  235:             str(booking[2])) + \
  236:             ',') + \
  237:             lenght) + \
  238:             ',') + \
- 239:             str(booking[4])) + \
+ 239:             str(booking[4])) - \
  240:             ',') + \
  241:             str(booking[5])) + \
  242:             ',') + \
  243:             str(booking[6])) + \
--------------------------------------------------------------------------------
[11.47233 s] survived
   - [#  18] AOR constaints: 
--------------------------------------------------------------------------------
  236:             ',') + \
  237:             lenght) + \
  238:             ',') + \
  239:             str(booking[4])) + \
- 240:             ',') + \
+ 240:             ',') - \
  241:             str(booking[5])) + \
  242:             ',') + \
  243:             str(booking[6])) + \
  244:             ',') + \
--------------------------------------------------------------------------------
[11.46834 s] survived
   - [#  19] AOR constaints: 
--------------------------------------------------------------------------------
  237:             lenght) + \
  238:             ',') + \
  239:             str(booking[4])) + \
  240:             ',') + \
- 241:             str(booking[5])) + \
+ 241:             str(booking[5])) - \
  242:             ',') + \
  243:             str(booking[6])) + \
  244:             ',') + \
  245:             time)
--------------------------------------------------------------------------------
[11.48875 s] survived
   - [#  20] AOR constaints: 
--------------------------------------------------------------------------------
  238:             ',') + \
  239:             str(booking[4])) + \
  240:             ',') + \
  241:             str(booking[5])) + \
- 242:             ',') + \
+ 242:             ',') - \
  243:             str(booking[6])) + \
  244:             ',') + \
  245:             time)
  246:     
--------------------------------------------------------------------------------
[11.47335 s] survived
   - [#  21] AOR constaints: 
--------------------------------------------------------------------------------
  239:             str(booking[4])) + \
  240:             ',') + \
  241:             str(booking[5])) + \
  242:             ',') + \
- 243:             str(booking[6])) + \
+ 243:             str(booking[6])) - \
  244:             ',') + \
  245:             time)
  246:     
  247:     
--------------------------------------------------------------------------------
[11.89607 s] survived
   - [#  22] AOR constaints: 
--------------------------------------------------------------------------------
  240:             ',') + \
  241:             str(booking[5])) + \
  242:             ',') + \
  243:             str(booking[6])) + \
- 244:             ',') + \
+ 244:             ',') - \
  245:             time)
  246:     
  247:     
  248:     d.close()
--------------------------------------------------------------------------------
[11.58496 s] survived
   - [#  23] AOR constaints: 
--------------------------------------------------------------------------------
  275: 
  276: def checkTimeInAdvance(now, dateS, bookingTime):
  277:     
  278:     
- 279:     minBookTime = now + timedelta(hours=3)
+ 279:     minBookTime = now - timedelta(hours=3)
  280:     bookingTime = datetime.strptime(bookingTime, '%H:%M')
  281:     if (now.date() == dateS and minBookTime.time() > bookingTime.time()):
  282:         return False
  283:     else:
--------------------------------------------------------------------------------
[11.50535 s] survived
   - [#  24] ASR constaints: 
--------------------------------------------------------------------------------
   58:     
   59:     errorMSG = "You can't: "
   60:     passes = True
   61:     if not (checkWeekend(booking[1])):
-  62:         errorMSG += 'book on weekends, '
+  62:         errorMSG -= 'book on weekends, '
   63:         passes = False
   64:     if not (checkHoliday(booking[1])):
   65:         errorMSG += 'book on holidays, '
   66:         passes = False
--------------------------------------------------------------------------------
[11.85766 s] survived
   - [#  25] ASR constaints: 
--------------------------------------------------------------------------------
   61:     if not (checkWeekend(booking[1])):
   62:         errorMSG += 'book on weekends, '
   63:         passes = False
   64:     if not (checkHoliday(booking[1])):
-  65:         errorMSG += 'book on holidays, '
+  65:         errorMSG -= 'book on holidays, '
   66:         passes = False
   67:     if not (checkNulls(booking)):
   68:         errorMSG += 'leave any fields blank, '
   69:         passes = False
--------------------------------------------------------------------------------
[11.76962 s] survived
   - [#  26] ASR constaints: 
--------------------------------------------------------------------------------
   64:     if not (checkHoliday(booking[1])):
   65:         errorMSG += 'book on holidays, '
   66:         passes = False
   67:     if not (checkNulls(booking)):
-  68:         errorMSG += 'leave any fields blank, '
+  68:         errorMSG -= 'leave any fields blank, '
   69:         passes = False
   70:     if not (ageRange(booking[0], booking[4])):
   71:         errorMSG += 'book with this age range, '
   72:         passes = False
--------------------------------------------------------------------------------
[11.43852 s] survived
   - [#  27] ASR constaints: 
--------------------------------------------------------------------------------
   67:     if not (checkNulls(booking)):
   68:         errorMSG += 'leave any fields blank, '
   69:         passes = False
   70:     if not (ageRange(booking[0], booking[4])):
-  71:         errorMSG += 'book with this age range, '
+  71:         errorMSG -= 'book with this age range, '
   72:         passes = False
   73:     if not (maxOcc(booking[0], int(booking[2]))):
   74:         errorMSG += 'have that many people in this room, '
   75:         passes = False
--------------------------------------------------------------------------------
[11.50698 s] survived
   - [#  28] ASR constaints: 
--------------------------------------------------------------------------------
   70:     if not (ageRange(booking[0], booking[4])):
   71:         errorMSG += 'book with this age range, '
   72:         passes = False
   73:     if not (maxOcc(booking[0], int(booking[2]))):
-  74:         errorMSG += 'have that many people in this room, '
+  74:         errorMSG -= 'have that many people in this room, '
   75:         passes = False
   76:     if not (checkFullMoon(booking[0], booking[1])):
   77:         errorMSG += 'book not on a full moon, '
   78:         passes = False
--------------------------------------------------------------------------------
[12.75634 s] survived
   - [#  29] ASR constaints: 
--------------------------------------------------------------------------------
   73:     if not (maxOcc(booking[0], int(booking[2]))):
   74:         errorMSG += 'have that many people in this room, '
   75:         passes = False
   76:     if not (checkFullMoon(booking[0], booking[1])):
-  77:         errorMSG += 'book not on a full moon, '
+  77:         errorMSG -= 'book not on a full moon, '
   78:         passes = False
   79:     return [passes, errorMSG[:-2]]
   80: 
   81: 
--------------------------------------------------------------------------------
[11.44047 s] survived
   - [#  30] ASR constaints: 
--------------------------------------------------------------------------------
   84:     
   85:     errorMSG = ''
   86:     passes = True
   87:     if not (userBooked(booking[5], booking[6], booking[1], booking[7], bookings)):
-  88:         errorMSG += 'You already have a booking at this time, '
+  88:         errorMSG -= 'You already have a booking at this time, '
   89:         passes = False
   90:     if not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])):
   91:         errorMSG += "You can't book less than 3 hours in advance, "
   92:         passes = False
--------------------------------------------------------------------------------
[11.42853 s] survived
   - [#  31] ASR constaints: 
--------------------------------------------------------------------------------
   87:     if not (userBooked(booking[5], booking[6], booking[1], booking[7], bookings)):
   88:         errorMSG += 'You already have a booking at this time, '
   89:         passes = False
   90:     if not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])):
-  91:         errorMSG += "You can't book less than 3 hours in advance, "
+  91:         errorMSG -= "You can't book less than 3 hours in advance, "
   92:         passes = False
   93:     return [passes, errorMSG[:2]]
   94: 
   95: 
--------------------------------------------------------------------------------
[11.46808 s] survived
   - [#  32] BCR constaints: 
--------------------------------------------------------------------------------
  108:     for r in allRooms:
  109:         if room.name == r.name:
  110:             maxAge = r.maxAge
  111:             minAge = r.minAge
- 112:             break
+ 112:             continue
  113:     (minAgeIn, maxAgeIn) = age.split('-')
  114:     minAgeIn = int(minAgeIn)
  115:     maxAgeIn = int(maxAgeIn)
  116:     if (minAgeIn >= minAge and maxAgeIn <= maxAge):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  33] BCR constaints: 
--------------------------------------------------------------------------------
  124:     
  125:     for r in allRooms:
  126:         if room.name == r.name:
  127:             maxO = r.maxO
- 128:             break
+ 128:             continue
  129:     if numOfPeople > maxO:
  130:         return False
  131:     else:
  132:         return True
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [#  34] COD constaints: 
--------------------------------------------------------------------------------
   57:     
   58:     
   59:     errorMSG = "You can't: "
   60:     passes = True
-  61:     if not (checkWeekend(booking[1])):
+  61:     if checkWeekend(booking[1]):
   62:         errorMSG += 'book on weekends, '
   63:         passes = False
   64:     if not (checkHoliday(booking[1])):
   65:         errorMSG += 'book on holidays, '
--------------------------------------------------------------------------------
[11.41030 s] survived
   - [#  35] COD constaints: 
--------------------------------------------------------------------------------
   60:     passes = True
   61:     if not (checkWeekend(booking[1])):
   62:         errorMSG += 'book on weekends, '
   63:         passes = False
-  64:     if not (checkHoliday(booking[1])):
+  64:     if checkHoliday(booking[1]):
   65:         errorMSG += 'book on holidays, '
   66:         passes = False
   67:     if not (checkNulls(booking)):
   68:         errorMSG += 'leave any fields blank, '
--------------------------------------------------------------------------------
[11.43065 s] survived
   - [#  36] COD constaints: 
--------------------------------------------------------------------------------
   63:         passes = False
   64:     if not (checkHoliday(booking[1])):
   65:         errorMSG += 'book on holidays, '
   66:         passes = False
-  67:     if not (checkNulls(booking)):
+  67:     if checkNulls(booking):
   68:         errorMSG += 'leave any fields blank, '
   69:         passes = False
   70:     if not (ageRange(booking[0], booking[4])):
   71:         errorMSG += 'book with this age range, '
--------------------------------------------------------------------------------
[11.47294 s] survived
   - [#  37] COD constaints: 
--------------------------------------------------------------------------------
   66:         passes = False
   67:     if not (checkNulls(booking)):
   68:         errorMSG += 'leave any fields blank, '
   69:         passes = False
-  70:     if not (ageRange(booking[0], booking[4])):
+  70:     if ageRange(booking[0], booking[4]):
   71:         errorMSG += 'book with this age range, '
   72:         passes = False
   73:     if not (maxOcc(booking[0], int(booking[2]))):
   74:         errorMSG += 'have that many people in this room, '
--------------------------------------------------------------------------------
[11.43129 s] survived
   - [#  38] COD constaints: 
--------------------------------------------------------------------------------
   69:         passes = False
   70:     if not (ageRange(booking[0], booking[4])):
   71:         errorMSG += 'book with this age range, '
   72:         passes = False
-  73:     if not (maxOcc(booking[0], int(booking[2]))):
+  73:     if maxOcc(booking[0], int(booking[2])):
   74:         errorMSG += 'have that many people in this room, '
   75:         passes = False
   76:     if not (checkFullMoon(booking[0], booking[1])):
   77:         errorMSG += 'book not on a full moon, '
--------------------------------------------------------------------------------
[11.40031 s] survived
   - [#  39] COD constaints: 
--------------------------------------------------------------------------------
   72:         passes = False
   73:     if not (maxOcc(booking[0], int(booking[2]))):
   74:         errorMSG += 'have that many people in this room, '
   75:         passes = False
-  76:     if not (checkFullMoon(booking[0], booking[1])):
+  76:     if checkFullMoon(booking[0], booking[1]):
   77:         errorMSG += 'book not on a full moon, '
   78:         passes = False
   79:     return [passes, errorMSG[:-2]]
   80: 
--------------------------------------------------------------------------------
[11.49854 s] survived
   - [#  40] COD constaints: 
--------------------------------------------------------------------------------
   83:     
   84:     
   85:     errorMSG = ''
   86:     passes = True
-  87:     if not (userBooked(booking[5], booking[6], booking[1], booking[7], bookings)):
+  87:     if userBooked(booking[5], booking[6], booking[1], booking[7], bookings):
   88:         errorMSG += 'You already have a booking at this time, '
   89:         passes = False
   90:     if not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])):
   91:         errorMSG += "You can't book less than 3 hours in advance, "
--------------------------------------------------------------------------------
[11.42500 s] survived
   - [#  41] COD constaints: 
--------------------------------------------------------------------------------
   86:     passes = True
   87:     if not (userBooked(booking[5], booking[6], booking[1], booking[7], bookings)):
   88:         errorMSG += 'You already have a booking at this time, '
   89:         passes = False
-  90:     if not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])):
+  90:     if checkTimeInAdvance(datetime.now(), booking[1], booking[7]):
   91:         errorMSG += "You can't book less than 3 hours in advance, "
   92:         passes = False
   93:     return [passes, errorMSG[:2]]
   94: 
--------------------------------------------------------------------------------
[11.42665 s] survived
   - [#  42] COD constaints: 
--------------------------------------------------------------------------------
  160:         if i:
  161:             if (i[1] == date and i[0].name == room.name):
  162:                 daysBookings.append(i)
  163:     
- 164:     if not daysBookings:
+ 164:     if daysBookings:
  165:         if meetLength == 1:
  166:             return usableTimes
  167:         if meetLength == 2:
  168:             return usableTimes[:9]
--------------------------------------------------------------------------------
[11.48763 s] survived
   - [#  43] COI constaints: 
--------------------------------------------------------------------------------
   57:     
   58:     
   59:     errorMSG = "You can't: "
   60:     passes = True
-  61:     if not (checkWeekend(booking[1])):
+  61:     if not ((not (checkWeekend(booking[1])))):
   62:         errorMSG += 'book on weekends, '
   63:         passes = False
   64:     if not (checkHoliday(booking[1])):
   65:         errorMSG += 'book on holidays, '
--------------------------------------------------------------------------------
[11.44449 s] survived
   - [#  44] COI constaints: 
--------------------------------------------------------------------------------
   60:     passes = True
   61:     if not (checkWeekend(booking[1])):
   62:         errorMSG += 'book on weekends, '
   63:         passes = False
-  64:     if not (checkHoliday(booking[1])):
+  64:     if not ((not (checkHoliday(booking[1])))):
   65:         errorMSG += 'book on holidays, '
   66:         passes = False
   67:     if not (checkNulls(booking)):
   68:         errorMSG += 'leave any fields blank, '
--------------------------------------------------------------------------------
[11.41871 s] survived
   - [#  45] COI constaints: 
--------------------------------------------------------------------------------
   63:         passes = False
   64:     if not (checkHoliday(booking[1])):
   65:         errorMSG += 'book on holidays, '
   66:         passes = False
-  67:     if not (checkNulls(booking)):
+  67:     if not ((not (checkNulls(booking)))):
   68:         errorMSG += 'leave any fields blank, '
   69:         passes = False
   70:     if not (ageRange(booking[0], booking[4])):
   71:         errorMSG += 'book with this age range, '
--------------------------------------------------------------------------------
[11.48457 s] survived
   - [#  46] COI constaints: 
--------------------------------------------------------------------------------
   66:         passes = False
   67:     if not (checkNulls(booking)):
   68:         errorMSG += 'leave any fields blank, '
   69:         passes = False
-  70:     if not (ageRange(booking[0], booking[4])):
+  70:     if not ((not (ageRange(booking[0], booking[4])))):
   71:         errorMSG += 'book with this age range, '
   72:         passes = False
   73:     if not (maxOcc(booking[0], int(booking[2]))):
   74:         errorMSG += 'have that many people in this room, '
--------------------------------------------------------------------------------
[11.50227 s] survived
   - [#  47] COI constaints: 
--------------------------------------------------------------------------------
   69:         passes = False
   70:     if not (ageRange(booking[0], booking[4])):
   71:         errorMSG += 'book with this age range, '
   72:         passes = False
-  73:     if not (maxOcc(booking[0], int(booking[2]))):
+  73:     if not ((not (maxOcc(booking[0], int(booking[2]))))):
   74:         errorMSG += 'have that many people in this room, '
   75:         passes = False
   76:     if not (checkFullMoon(booking[0], booking[1])):
   77:         errorMSG += 'book not on a full moon, '
--------------------------------------------------------------------------------
[11.44181 s] survived
   - [#  48] COI constaints: 
--------------------------------------------------------------------------------
   72:         passes = False
   73:     if not (maxOcc(booking[0], int(booking[2]))):
   74:         errorMSG += 'have that many people in this room, '
   75:         passes = False
-  76:     if not (checkFullMoon(booking[0], booking[1])):
+  76:     if not ((not (checkFullMoon(booking[0], booking[1])))):
   77:         errorMSG += 'book not on a full moon, '
   78:         passes = False
   79:     return [passes, errorMSG[:-2]]
   80: 
--------------------------------------------------------------------------------
[11.43503 s] survived
   - [#  49] COI constaints: 
--------------------------------------------------------------------------------
   83:     
   84:     
   85:     errorMSG = ''
   86:     passes = True
-  87:     if not (userBooked(booking[5], booking[6], booking[1], booking[7], bookings)):
+  87:     if not ((not (userBooked(booking[5], booking[6], booking[1], booking[7], bookings)))):
   88:         errorMSG += 'You already have a booking at this time, '
   89:         passes = False
   90:     if not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])):
   91:         errorMSG += "You can't book less than 3 hours in advance, "
--------------------------------------------------------------------------------
[11.43611 s] survived
   - [#  50] COI constaints: 
--------------------------------------------------------------------------------
   86:     passes = True
   87:     if not (userBooked(booking[5], booking[6], booking[1], booking[7], bookings)):
   88:         errorMSG += 'You already have a booking at this time, '
   89:         passes = False
-  90:     if not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])):
+  90:     if not ((not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])))):
   91:         errorMSG += "You can't book less than 3 hours in advance, "
   92:         passes = False
   93:     return [passes, errorMSG[:2]]
   94: 
--------------------------------------------------------------------------------
[11.44537 s] survived
   - [#  51] COI constaints: 
--------------------------------------------------------------------------------
   96: def getRoom(roomName):
   97:     
   98:     
   99:     for room in allRooms:
- 100:         if room.name == roomName:
+ 100:         if not (room.name == roomName):
  101:             return room
  102:     return False
  103: 
  104: 
--------------------------------------------------------------------------------
[11.40454 s] survived
   - [#  52] COI constaints: 
--------------------------------------------------------------------------------
  105: def ageRange(room, age):
  106:     
  107:     
  108:     for r in allRooms:
- 109:         if room.name == r.name:
+ 109:         if not (room.name == r.name):
  110:             maxAge = r.maxAge
  111:             minAge = r.minAge
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
--------------------------------------------------------------------------------
[11.41707 s] survived
   - [#  53] COI constaints: 
--------------------------------------------------------------------------------
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
  114:     minAgeIn = int(minAgeIn)
  115:     maxAgeIn = int(maxAgeIn)
- 116:     if (minAgeIn >= minAge and maxAgeIn <= maxAge):
+ 116:     if not ((minAgeIn >= minAge and maxAgeIn <= maxAge)):
  117:         return True
  118:     else:
  119:         return False
  120: 
--------------------------------------------------------------------------------
[11.43707 s] survived
   - [#  54] COI constaints: 
--------------------------------------------------------------------------------
  122: def maxOcc(room, numOfPeople):
  123:     
  124:     
  125:     for r in allRooms:
- 126:         if room.name == r.name:
+ 126:         if not (room.name == r.name):
  127:             maxO = r.maxO
  128:             break
  129:     if numOfPeople > maxO:
  130:         return False
--------------------------------------------------------------------------------
[11.97893 s] survived
   - [#  55] COI constaints: 
--------------------------------------------------------------------------------
  125:     for r in allRooms:
  126:         if room.name == r.name:
  127:             maxO = r.maxO
  128:             break
- 129:     if numOfPeople > maxO:
+ 129:     if not (numOfPeople > maxO):
  130:         return False
  131:     else:
  132:         return True
  133: 
--------------------------------------------------------------------------------
[11.52519 s] survived
   - [#  56] COI constaints: 
--------------------------------------------------------------------------------
  136:     
  137:     
  138:     
  139:     useTimes = []
- 140:     if date == currentDate.date():
+ 140:     if not (date == currentDate.date()):
  141:         for i in allTimes:
  142:             if int(currentDate.strftime('%H')) < int(i.split(':')[0]):
  143:                 useTimes.append(i)
  144:         return useTimes
--------------------------------------------------------------------------------
[11.41929 s] survived
   - [#  57] COI constaints: 
--------------------------------------------------------------------------------
  138:     
  139:     useTimes = []
  140:     if date == currentDate.date():
  141:         for i in allTimes:
- 142:             if int(currentDate.strftime('%H')) < int(i.split(':')[0]):
+ 142:             if not (int(currentDate.strftime('%H')) < int(i.split(':')[0])):
  143:                 useTimes.append(i)
  144:         return useTimes
  145:     else:
  146:         return allTimes
--------------------------------------------------------------------------------
[11.40088 s] survived
   - [#  58] COI constaints: 
--------------------------------------------------------------------------------
  156:     
  157:     
  158:     daysBookings = []
  159:     for i in bookings:
- 160:         if i:
+ 160:         if not i:
  161:             if (i[1] == date and i[0].name == room.name):
  162:                 daysBookings.append(i)
  163:     
  164:     if not daysBookings:
--------------------------------------------------------------------------------
[11.43887 s] survived
   - [#  59] COI constaints: 
--------------------------------------------------------------------------------
  157:     
  158:     daysBookings = []
  159:     for i in bookings:
  160:         if i:
- 161:             if (i[1] == date and i[0].name == room.name):
+ 161:             if not ((i[1] == date and i[0].name == room.name)):
  162:                 daysBookings.append(i)
  163:     
  164:     if not daysBookings:
  165:         if meetLength == 1:
--------------------------------------------------------------------------------
[11.45123 s] survived
   - [#  60] COI constaints: 
--------------------------------------------------------------------------------
  160:         if i:
  161:             if (i[1] == date and i[0].name == room.name):
  162:                 daysBookings.append(i)
  163:     
- 164:     if not daysBookings:
+ 164:     if not ((not daysBookings)):
  165:         if meetLength == 1:
  166:             return usableTimes
  167:         if meetLength == 2:
  168:             return usableTimes[:9]
--------------------------------------------------------------------------------
[11.40035 s] survived
   - [#  61] COI constaints: 
--------------------------------------------------------------------------------
  161:             if (i[1] == date and i[0].name == room.name):
  162:                 daysBookings.append(i)
  163:     
  164:     if not daysBookings:
- 165:         if meetLength == 1:
+ 165:         if not (meetLength == 1):
  166:             return usableTimes
  167:         if meetLength == 2:
  168:             return usableTimes[:9]
  169:         if meetLength == 3:
--------------------------------------------------------------------------------
[11.41179 s] survived
   - [#  62] COI constaints: 
--------------------------------------------------------------------------------
  163:     
  164:     if not daysBookings:
  165:         if meetLength == 1:
  166:             return usableTimes
- 167:         if meetLength == 2:
+ 167:         if not (meetLength == 2):
  168:             return usableTimes[:9]
  169:         if meetLength == 3:
  170:             return usableTimes[:8]
  171:     
--------------------------------------------------------------------------------
[11.44034 s] survived
   - [#  63] COI constaints: 
--------------------------------------------------------------------------------
  165:         if meetLength == 1:
  166:             return usableTimes
  167:         if meetLength == 2:
  168:             return usableTimes[:9]
- 169:         if meetLength == 3:
+ 169:         if not (meetLength == 3):
  170:             return usableTimes[:8]
  171:     
  172:     avaTimes = []
  173:     addTime = True
--------------------------------------------------------------------------------
[11.42599 s] survived
   - [#  64] COI constaints: 
--------------------------------------------------------------------------------
  170:             return usableTimes[:8]
  171:     
  172:     avaTimes = []
  173:     addTime = True
- 174:     if meetLength == 1:
+ 174:     if not (meetLength == 1):
  175:         for i in usableTimes:
  176:             for j in daysBookings:
  177:                 if j[7] == i:
  178:                     addTime = False
--------------------------------------------------------------------------------
[11.46804 s] survived
   - [#  65] COI constaints: 
--------------------------------------------------------------------------------
  173:     addTime = True
  174:     if meetLength == 1:
  175:         for i in usableTimes:
  176:             for j in daysBookings:
- 177:                 if j[7] == i:
+ 177:                 if not (j[7] == i):
  178:                     addTime = False
  179:             if addTime:
  180:                 avaTimes.append(i)
  181:             addTime = True
--------------------------------------------------------------------------------
[12.25042 s] survived
   - [#  66] COI constaints: 
--------------------------------------------------------------------------------
  175:         for i in usableTimes:
  176:             for j in daysBookings:
  177:                 if j[7] == i:
  178:                     addTime = False
- 179:             if addTime:
+ 179:             if not addTime:
  180:                 avaTimes.append(i)
  181:             addTime = True
  182:     elif meetLength == 2:
  183:         for i in usableTimes[:9]:
--------------------------------------------------------------------------------
[11.45799 s] survived
   - [#  67] COI constaints: 
--------------------------------------------------------------------------------
  178:                     addTime = False
  179:             if addTime:
  180:                 avaTimes.append(i)
  181:             addTime = True
- 182:     elif meetLength == 2:
+ 182:     elif not (meetLength == 2):
  183:         for i in usableTimes[:9]:
  184:             for j in daysBookings:
  185:                 if (j[7] == i or j[7] == str(
  186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
--------------------------------------------------------------------------------
[11.47441 s] survived
   - [#  68] COI constaints: 
--------------------------------------------------------------------------------
  181:             addTime = True
  182:     elif meetLength == 2:
  183:         for i in usableTimes[:9]:
  184:             for j in daysBookings:
- 185:                 if (j[7] == i or j[7] == str(
+ 185:                 if not ((j[7] == i or j[7] == str(
  186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
- 187:                     '%H:%M'))):
+ 187:                     '%H:%M')))):
  188:                     
  189:                     
  190:                     addTime = False
  191:             if addTime:
--------------------------------------------------------------------------------
[11.54072 s] survived
   - [#  69] COI constaints: 
--------------------------------------------------------------------------------
  187:                     '%H:%M'))):
  188:                     
  189:                     
  190:                     addTime = False
- 191:             if addTime:
+ 191:             if not addTime:
  192:                 avaTimes.append(i)
  193:             addTime = True
  194:     elif meetLength == 3:
  195:         for i in usableTimes[:8]:
--------------------------------------------------------------------------------
[11.49902 s] survived
   - [#  70] COI constaints: 
--------------------------------------------------------------------------------
  190:                     addTime = False
  191:             if addTime:
  192:                 avaTimes.append(i)
  193:             addTime = True
- 194:     elif meetLength == 3:
+ 194:     elif not (meetLength == 3):
  195:         for i in usableTimes[:8]:
  196:             for j in daysBookings:
  197:                 if \
  198:                     (j[7] == i or \
--------------------------------------------------------------------------------
[11.49574 s] survived
   - [#  71] COI constaints: 
--------------------------------------------------------------------------------
  193:             addTime = True
  194:     elif meetLength == 3:
  195:         for i in usableTimes[:8]:
  196:             for j in daysBookings:
- 197:                 if \
+ 197:                 if not (\
  198:                     (j[7] == i or \
  199:                     j[7] == \
  200:                     str(
  201:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  204:                     \
  205:                     j[7] == \
  206:                     str(
  207:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=2)).strftime(
- 208:                     '%H:%M'))):
+ 208:                     '%H:%M')))):
  209:                     
  210:                     
  211:                     
  212:                     addTime = False
--------------------------------------------------------------------------------
[11.46553 s] survived
   - [#  72] COI constaints: 
--------------------------------------------------------------------------------
  209:                     
  210:                     
  211:                     
  212:                     addTime = False
- 213:             if addTime:
+ 213:             if not addTime:
  214:                 avaTimes.append(i)
  215:             addTime = True
  216:     return avaTimes
  217: 
--------------------------------------------------------------------------------
[11.41800 s] survived
   - [#  73] COI constaints: 
--------------------------------------------------------------------------------
  253: def userBooked(name, phone, date, time, bookings):
  254:     
  255:     
  256:     for booking in bookings:
- 257:         if \
+ 257:         if not (\
  258:             (name == booking[5] and \
  259:             phone == booking[6] and \
  260:             date == booking[1] and \
- 261:             time == booking[7]):
+ 261:             time == booking[7])):
  262:             
  263:             return False
  264:     return True
  265: 
--------------------------------------------------------------------------------
[11.49746 s] survived
   - [#  74] COI constaints: 
--------------------------------------------------------------------------------
  266: 
  267: def checkWeekend(date):
  268:     
  269:     
- 270:     if date.weekday() > 4:
+ 270:     if not (date.weekday() > 4):
  271:         return False
  272:     else:
  273:         return True
  274: 
--------------------------------------------------------------------------------
[11.42891 s] survived
   - [#  75] COI constaints: 
--------------------------------------------------------------------------------
  277:     
  278:     
  279:     minBookTime = now + timedelta(hours=3)
  280:     bookingTime = datetime.strptime(bookingTime, '%H:%M')
- 281:     if (now.date() == dateS and minBookTime.time() > bookingTime.time()):
+ 281:     if not ((now.date() == dateS and minBookTime.time() > bookingTime.time())):
  282:         return False
  283:     else:
  284:         return True
  285: 
--------------------------------------------------------------------------------
[11.46753 s] survived
   - [#  76] COI constaints: 
--------------------------------------------------------------------------------
  285: 
  286: 
  287: def checkNulls(booking):
  288:     for i in booking:
- 289:         if i == '':
+ 289:         if not (i == ''):
  290:             return False
  291:     return True
  292: 
  293: 
--------------------------------------------------------------------------------
[11.42054 s] survived
   - [#  77] COI constaints: 
--------------------------------------------------------------------------------
  309:         'day': day})
  310:     
  311:     
  312:     
- 313:     if response.text == '[]':
+ 313:     if not (response.text == '[]'):
  314:         return True
  315:     else:
  316:         return False
  317: 
--------------------------------------------------------------------------------
[11.41907 s] survived
   - [#  78] COI constaints: 
--------------------------------------------------------------------------------
  320:     
  321:     
  322:     
  323:     date = datetime.strftime(date, '%Y-%m-%d')
- 324:     if room.name == 'Moon':
+ 324:     if not (room.name == 'Moon'):
  325:         i = IsFullMoon()
  326:         return i.set_date_string(date, '%Y-%m-%d').is_full_moon()
  327:     else:
  328:         return True
--------------------------------------------------------------------------------
[11.42660 s] survived
   - [#  79] LCR constaints: 
--------------------------------------------------------------------------------
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
  114:     minAgeIn = int(minAgeIn)
  115:     maxAgeIn = int(maxAgeIn)
- 116:     if (minAgeIn >= minAge and maxAgeIn <= maxAge):
+ 116:     if (minAgeIn >= minAge or maxAgeIn <= maxAge):
  117:         return True
  118:     else:
  119:         return False
  120: 
--------------------------------------------------------------------------------
[11.43269 s] survived
   - [#  80] LCR constaints: 
--------------------------------------------------------------------------------
  157:     
  158:     daysBookings = []
  159:     for i in bookings:
  160:         if i:
- 161:             if (i[1] == date and i[0].name == room.name):
+ 161:             if (i[1] == date or i[0].name == room.name):
  162:                 daysBookings.append(i)
  163:     
  164:     if not daysBookings:
  165:         if meetLength == 1:
--------------------------------------------------------------------------------
[11.45283 s] survived
   - [#  81] LCR constaints: 
--------------------------------------------------------------------------------
  181:             addTime = True
  182:     elif meetLength == 2:
  183:         for i in usableTimes[:9]:
  184:             for j in daysBookings:
- 185:                 if (j[7] == i or j[7] == str(
+ 185:                 if (j[7] == i and j[7] == str(
  186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  187:                     '%H:%M'))):
  188:                     
  189:                     
--------------------------------------------------------------------------------
[11.50602 s] survived
   - [#  82] LCR constaints: 
--------------------------------------------------------------------------------
  194:     elif meetLength == 3:
  195:         for i in usableTimes[:8]:
  196:             for j in daysBookings:
  197:                 if \
- 198:                     (j[7] == i or \
+ 198:                     (j[7] == i and \
  199:                     j[7] == \
  200:                     str(
  201:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
- 202:                     '%H:%M')) or \
+ 202:                     '%H:%M')) and \
  203:                     \
  204:                     \
  205:                     j[7] == \
  206:                     str(
--------------------------------------------------------------------------------
[11.48600 s] survived
   - [#  83] LCR constaints: 
--------------------------------------------------------------------------------
  254:     
  255:     
  256:     for booking in bookings:
  257:         if \
- 258:             (name == booking[5] and \
- 259:             phone == booking[6] and \
- 260:             date == booking[1] and \
+ 258:             (name == booking[5] or \
+ 259:             phone == booking[6] or \
+ 260:             date == booking[1] or \
  261:             time == booking[7]):
  262:             
  263:             return False
  264:     return True
--------------------------------------------------------------------------------
[11.44618 s] survived
   - [#  84] LCR constaints: 
--------------------------------------------------------------------------------
  277:     
  278:     
  279:     minBookTime = now + timedelta(hours=3)
  280:     bookingTime = datetime.strptime(bookingTime, '%H:%M')
- 281:     if (now.date() == dateS and minBookTime.time() > bookingTime.time()):
+ 281:     if (now.date() == dateS or minBookTime.time() > bookingTime.time()):
  282:         return False
  283:     else:
  284:         return True
  285: 
--------------------------------------------------------------------------------
[11.41273 s] survived
   - [#  85] ROR constaints: 
--------------------------------------------------------------------------------
   96: def getRoom(roomName):
   97:     
   98:     
   99:     for room in allRooms:
- 100:         if room.name == roomName:
+ 100:         if room.name != roomName:
  101:             return room
  102:     return False
  103: 
  104: 
--------------------------------------------------------------------------------
[11.42262 s] survived
   - [#  86] ROR constaints: 
--------------------------------------------------------------------------------
  105: def ageRange(room, age):
  106:     
  107:     
  108:     for r in allRooms:
- 109:         if room.name == r.name:
+ 109:         if room.name != r.name:
  110:             maxAge = r.maxAge
  111:             minAge = r.minAge
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
--------------------------------------------------------------------------------
[11.42588 s] survived
   - [#  87] ROR constaints: 
--------------------------------------------------------------------------------
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
  114:     minAgeIn = int(minAgeIn)
  115:     maxAgeIn = int(maxAgeIn)
- 116:     if (minAgeIn >= minAge and maxAgeIn <= maxAge):
+ 116:     if (minAgeIn <= minAge and maxAgeIn <= maxAge):
  117:         return True
  118:     else:
  119:         return False
  120: 
--------------------------------------------------------------------------------
[11.47475 s] survived
   - [#  88] ROR constaints: 
--------------------------------------------------------------------------------
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
  114:     minAgeIn = int(minAgeIn)
  115:     maxAgeIn = int(maxAgeIn)
- 116:     if (minAgeIn >= minAge and maxAgeIn <= maxAge):
+ 116:     if (minAgeIn > minAge and maxAgeIn <= maxAge):
  117:         return True
  118:     else:
  119:         return False
  120: 
--------------------------------------------------------------------------------
[11.43709 s] survived
   - [#  89] ROR constaints: 
--------------------------------------------------------------------------------
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
  114:     minAgeIn = int(minAgeIn)
  115:     maxAgeIn = int(maxAgeIn)
- 116:     if (minAgeIn >= minAge and maxAgeIn <= maxAge):
+ 116:     if (minAgeIn >= minAge and maxAgeIn >= maxAge):
  117:         return True
  118:     else:
  119:         return False
  120: 
--------------------------------------------------------------------------------
[11.38186 s] survived
   - [#  90] ROR constaints: 
--------------------------------------------------------------------------------
  112:             break
  113:     (minAgeIn, maxAgeIn) = age.split('-')
  114:     minAgeIn = int(minAgeIn)
  115:     maxAgeIn = int(maxAgeIn)
- 116:     if (minAgeIn >= minAge and maxAgeIn <= maxAge):
+ 116:     if (minAgeIn >= minAge and maxAgeIn < maxAge):
  117:         return True
  118:     else:
  119:         return False
  120: 
--------------------------------------------------------------------------------
[11.44863 s] survived
   - [#  91] ROR constaints: 
--------------------------------------------------------------------------------
  122: def maxOcc(room, numOfPeople):
  123:     
  124:     
  125:     for r in allRooms:
- 126:         if room.name == r.name:
+ 126:         if room.name != r.name:
  127:             maxO = r.maxO
  128:             break
  129:     if numOfPeople > maxO:
  130:         return False
--------------------------------------------------------------------------------
[11.44580 s] survived
   - [#  92] ROR constaints: 
--------------------------------------------------------------------------------
  125:     for r in allRooms:
  126:         if room.name == r.name:
  127:             maxO = r.maxO
  128:             break
- 129:     if numOfPeople > maxO:
+ 129:     if numOfPeople < maxO:
  130:         return False
  131:     else:
  132:         return True
  133: 
--------------------------------------------------------------------------------
[11.43980 s] survived
   - [#  93] ROR constaints: 
--------------------------------------------------------------------------------
  125:     for r in allRooms:
  126:         if room.name == r.name:
  127:             maxO = r.maxO
  128:             break
- 129:     if numOfPeople > maxO:
+ 129:     if numOfPeople >= maxO:
  130:         return False
  131:     else:
  132:         return True
  133: 
--------------------------------------------------------------------------------
[11.46076 s] survived
   - [#  94] ROR constaints: 
--------------------------------------------------------------------------------
  136:     
  137:     
  138:     
  139:     useTimes = []
- 140:     if date == currentDate.date():
+ 140:     if date != currentDate.date():
  141:         for i in allTimes:
  142:             if int(currentDate.strftime('%H')) < int(i.split(':')[0]):
  143:                 useTimes.append(i)
  144:         return useTimes
--------------------------------------------------------------------------------
[11.45425 s] survived
   - [#  95] ROR constaints: 
--------------------------------------------------------------------------------
  138:     
  139:     useTimes = []
  140:     if date == currentDate.date():
  141:         for i in allTimes:
- 142:             if int(currentDate.strftime('%H')) < int(i.split(':')[0]):
+ 142:             if int(currentDate.strftime('%H')) > int(i.split(':')[0]):
  143:                 useTimes.append(i)
  144:         return useTimes
  145:     else:
  146:         return allTimes
--------------------------------------------------------------------------------
[11.45729 s] survived
   - [#  96] ROR constaints: 
--------------------------------------------------------------------------------
  138:     
  139:     useTimes = []
  140:     if date == currentDate.date():
  141:         for i in allTimes:
- 142:             if int(currentDate.strftime('%H')) < int(i.split(':')[0]):
+ 142:             if int(currentDate.strftime('%H')) <= int(i.split(':')[0]):
  143:                 useTimes.append(i)
  144:         return useTimes
  145:     else:
  146:         return allTimes
--------------------------------------------------------------------------------
[11.44876 s] survived
   - [#  97] ROR constaints: 
--------------------------------------------------------------------------------
  157:     
  158:     daysBookings = []
  159:     for i in bookings:
  160:         if i:
- 161:             if (i[1] == date and i[0].name == room.name):
+ 161:             if (i[1] != date and i[0].name == room.name):
  162:                 daysBookings.append(i)
  163:     
  164:     if not daysBookings:
  165:         if meetLength == 1:
--------------------------------------------------------------------------------
[11.40350 s] survived
   - [#  98] ROR constaints: 
--------------------------------------------------------------------------------
  157:     
  158:     daysBookings = []
  159:     for i in bookings:
  160:         if i:
- 161:             if (i[1] == date and i[0].name == room.name):
+ 161:             if (i[1] == date and i[0].name != room.name):
  162:                 daysBookings.append(i)
  163:     
  164:     if not daysBookings:
  165:         if meetLength == 1:
--------------------------------------------------------------------------------
[11.41434 s] survived
   - [#  99] ROR constaints: 
--------------------------------------------------------------------------------
  161:             if (i[1] == date and i[0].name == room.name):
  162:                 daysBookings.append(i)
  163:     
  164:     if not daysBookings:
- 165:         if meetLength == 1:
+ 165:         if meetLength != 1:
  166:             return usableTimes
  167:         if meetLength == 2:
  168:             return usableTimes[:9]
  169:         if meetLength == 3:
--------------------------------------------------------------------------------
[11.38453 s] survived
   - [# 100] ROR constaints: 
--------------------------------------------------------------------------------
  163:     
  164:     if not daysBookings:
  165:         if meetLength == 1:
  166:             return usableTimes
- 167:         if meetLength == 2:
+ 167:         if meetLength != 2:
  168:             return usableTimes[:9]
  169:         if meetLength == 3:
  170:             return usableTimes[:8]
  171:     
--------------------------------------------------------------------------------
[11.46097 s] survived
   - [# 101] ROR constaints: 
--------------------------------------------------------------------------------
  165:         if meetLength == 1:
  166:             return usableTimes
  167:         if meetLength == 2:
  168:             return usableTimes[:9]
- 169:         if meetLength == 3:
+ 169:         if meetLength != 3:
  170:             return usableTimes[:8]
  171:     
  172:     avaTimes = []
  173:     addTime = True
--------------------------------------------------------------------------------
[11.42905 s] survived
   - [# 102] ROR constaints: 
--------------------------------------------------------------------------------
  170:             return usableTimes[:8]
  171:     
  172:     avaTimes = []
  173:     addTime = True
- 174:     if meetLength == 1:
+ 174:     if meetLength != 1:
  175:         for i in usableTimes:
  176:             for j in daysBookings:
  177:                 if j[7] == i:
  178:                     addTime = False
--------------------------------------------------------------------------------
[11.47214 s] survived
   - [# 103] ROR constaints: 
--------------------------------------------------------------------------------
  173:     addTime = True
  174:     if meetLength == 1:
  175:         for i in usableTimes:
  176:             for j in daysBookings:
- 177:                 if j[7] == i:
+ 177:                 if j[7] != i:
  178:                     addTime = False
  179:             if addTime:
  180:                 avaTimes.append(i)
  181:             addTime = True
--------------------------------------------------------------------------------
[11.50151 s] survived
   - [# 104] ROR constaints: 
--------------------------------------------------------------------------------
  178:                     addTime = False
  179:             if addTime:
  180:                 avaTimes.append(i)
  181:             addTime = True
- 182:     elif meetLength == 2:
+ 182:     elif meetLength != 2:
  183:         for i in usableTimes[:9]:
  184:             for j in daysBookings:
  185:                 if (j[7] == i or j[7] == str(
  186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
--------------------------------------------------------------------------------
[11.40905 s] survived
   - [# 105] ROR constaints: 
--------------------------------------------------------------------------------
  181:             addTime = True
  182:     elif meetLength == 2:
  183:         for i in usableTimes[:9]:
  184:             for j in daysBookings:
- 185:                 if (j[7] == i or j[7] == str(
+ 185:                 if (j[7] != i or j[7] == str(
  186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  187:                     '%H:%M'))):
  188:                     
  189:                     
--------------------------------------------------------------------------------
[11.46485 s] survived
   - [# 106] ROR constaints: 
--------------------------------------------------------------------------------
  181:             addTime = True
  182:     elif meetLength == 2:
  183:         for i in usableTimes[:9]:
  184:             for j in daysBookings:
- 185:                 if (j[7] == i or j[7] == str(
+ 185:                 if (j[7] == i or j[7] != str(
  186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  187:                     '%H:%M'))):
  188:                     
  189:                     
--------------------------------------------------------------------------------
[11.53857 s] survived
   - [# 107] ROR constaints: 
--------------------------------------------------------------------------------
  190:                     addTime = False
  191:             if addTime:
  192:                 avaTimes.append(i)
  193:             addTime = True
- 194:     elif meetLength == 3:
+ 194:     elif meetLength != 3:
  195:         for i in usableTimes[:8]:
  196:             for j in daysBookings:
  197:                 if \
  198:                     (j[7] == i or \
--------------------------------------------------------------------------------
[11.64224 s] survived
   - [# 108] ROR constaints: 
--------------------------------------------------------------------------------
  194:     elif meetLength == 3:
  195:         for i in usableTimes[:8]:
  196:             for j in daysBookings:
  197:                 if \
- 198:                     (j[7] == i or \
+ 198:                     (j[7] != i or \
  199:                     j[7] == \
  200:                     str(
  201:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  202:                     '%H:%M')) or \
--------------------------------------------------------------------------------
[11.44311 s] survived
   - [# 109] ROR constaints: 
--------------------------------------------------------------------------------
  195:         for i in usableTimes[:8]:
  196:             for j in daysBookings:
  197:                 if \
  198:                     (j[7] == i or \
- 199:                     j[7] == \
+ 199:                     j[7] != \
  200:                     str(
  201:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  202:                     '%H:%M')) or \
  203:                     \
--------------------------------------------------------------------------------
[11.40554 s] survived
   - [# 110] ROR constaints: 
--------------------------------------------------------------------------------
  201:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  202:                     '%H:%M')) or \
  203:                     \
  204:                     \
- 205:                     j[7] == \
+ 205:                     j[7] != \
  206:                     str(
  207:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=2)).strftime(
  208:                     '%H:%M'))):
  209:                     
--------------------------------------------------------------------------------
[11.60869 s] survived
   - [# 111] ROR constaints: 
--------------------------------------------------------------------------------
  254:     
  255:     
  256:     for booking in bookings:
  257:         if \
- 258:             (name == booking[5] and \
+ 258:             (name != booking[5] and \
  259:             phone == booking[6] and \
  260:             date == booking[1] and \
  261:             time == booking[7]):
  262:             
--------------------------------------------------------------------------------
[11.62757 s] survived
   - [# 112] ROR constaints: 
--------------------------------------------------------------------------------
  255:     
  256:     for booking in bookings:
  257:         if \
  258:             (name == booking[5] and \
- 259:             phone == booking[6] and \
+ 259:             phone != booking[6] and \
  260:             date == booking[1] and \
  261:             time == booking[7]):
  262:             
  263:             return False
--------------------------------------------------------------------------------
[11.38859 s] survived
   - [# 113] ROR constaints: 
--------------------------------------------------------------------------------
  256:     for booking in bookings:
  257:         if \
  258:             (name == booking[5] and \
  259:             phone == booking[6] and \
- 260:             date == booking[1] and \
+ 260:             date != booking[1] and \
  261:             time == booking[7]):
  262:             
  263:             return False
  264:     return True
--------------------------------------------------------------------------------
[11.43403 s] survived
   - [# 114] ROR constaints: 
--------------------------------------------------------------------------------
  257:         if \
  258:             (name == booking[5] and \
  259:             phone == booking[6] and \
  260:             date == booking[1] and \
- 261:             time == booking[7]):
+ 261:             time != booking[7]):
  262:             
  263:             return False
  264:     return True
  265: 
--------------------------------------------------------------------------------
[11.45145 s] survived
   - [# 115] ROR constaints: 
--------------------------------------------------------------------------------
  266: 
  267: def checkWeekend(date):
  268:     
  269:     
- 270:     if date.weekday() > 4:
+ 270:     if date.weekday() < 4:
  271:         return False
  272:     else:
  273:         return True
  274: 
--------------------------------------------------------------------------------
[11.48106 s] survived
   - [# 116] ROR constaints: 
--------------------------------------------------------------------------------
  266: 
  267: def checkWeekend(date):
  268:     
  269:     
- 270:     if date.weekday() > 4:
+ 270:     if date.weekday() >= 4:
  271:         return False
  272:     else:
  273:         return True
  274: 
--------------------------------------------------------------------------------
[11.57374 s] survived
   - [# 117] ROR constaints: 
--------------------------------------------------------------------------------
  277:     
  278:     
  279:     minBookTime = now + timedelta(hours=3)
  280:     bookingTime = datetime.strptime(bookingTime, '%H:%M')
- 281:     if (now.date() == dateS and minBookTime.time() > bookingTime.time()):
+ 281:     if (now.date() != dateS and minBookTime.time() > bookingTime.time()):
  282:         return False
  283:     else:
  284:         return True
  285: 
--------------------------------------------------------------------------------
[11.43753 s] survived
   - [# 118] ROR constaints: 
--------------------------------------------------------------------------------
  277:     
  278:     
  279:     minBookTime = now + timedelta(hours=3)
  280:     bookingTime = datetime.strptime(bookingTime, '%H:%M')
- 281:     if (now.date() == dateS and minBookTime.time() > bookingTime.time()):
+ 281:     if (now.date() == dateS and minBookTime.time() < bookingTime.time()):
  282:         return False
  283:     else:
  284:         return True
  285: 
--------------------------------------------------------------------------------
[11.76853 s] survived
   - [# 119] ROR constaints: 
--------------------------------------------------------------------------------
  277:     
  278:     
  279:     minBookTime = now + timedelta(hours=3)
  280:     bookingTime = datetime.strptime(bookingTime, '%H:%M')
- 281:     if (now.date() == dateS and minBookTime.time() > bookingTime.time()):
+ 281:     if (now.date() == dateS and minBookTime.time() >= bookingTime.time()):
  282:         return False
  283:     else:
  284:         return True
  285: 
--------------------------------------------------------------------------------
[11.54623 s] survived
   - [# 120] ROR constaints: 
--------------------------------------------------------------------------------
  285: 
  286: 
  287: def checkNulls(booking):
  288:     for i in booking:
- 289:         if i == '':
+ 289:         if i != '':
  290:             return False
  291:     return True
  292: 
  293: 
--------------------------------------------------------------------------------
[11.43944 s] survived
   - [# 121] ROR constaints: 
--------------------------------------------------------------------------------
  309:         'day': day})
  310:     
  311:     
  312:     
- 313:     if response.text == '[]':
+ 313:     if response.text != '[]':
  314:         return True
  315:     else:
  316:         return False
  317: 
--------------------------------------------------------------------------------
[11.46661 s] survived
   - [# 122] ROR constaints: 
--------------------------------------------------------------------------------
  320:     
  321:     
  322:     
  323:     date = datetime.strftime(date, '%Y-%m-%d')
- 324:     if room.name == 'Moon':
+ 324:     if room.name != 'Moon':
  325:         i = IsFullMoon()
  326:         return i.set_date_string(date, '%Y-%m-%d').is_full_moon()
  327:     else:
  328:         return True
--------------------------------------------------------------------------------
[11.46230 s] survived
   - [# 123] SIR constaints: 
--------------------------------------------------------------------------------
   75:         passes = False
   76:     if not (checkFullMoon(booking[0], booking[1])):
   77:         errorMSG += 'book not on a full moon, '
   78:         passes = False
-  79:     return [passes, errorMSG[:-2]]
+  79:     return [passes, errorMSG[:]]
   80: 
   81: 
   82: def form2Checks(booking):
   83:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 124] SIR constaints: 
--------------------------------------------------------------------------------
   89:         passes = False
   90:     if not (checkTimeInAdvance(datetime.now(), booking[1], booking[7])):
   91:         errorMSG += "You can't book less than 3 hours in advance, "
   92:         passes = False
-  93:     return [passes, errorMSG[:2]]
+  93:     return [passes, errorMSG[:]]
   94: 
   95: 
   96: def getRoom(roomName):
   97:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 125] SIR constaints: 
--------------------------------------------------------------------------------
  164:     if not daysBookings:
  165:         if meetLength == 1:
  166:             return usableTimes
  167:         if meetLength == 2:
- 168:             return usableTimes[:9]
+ 168:             return usableTimes[:]
  169:         if meetLength == 3:
  170:             return usableTimes[:8]
  171:     
  172:     avaTimes = []
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 126] SIR constaints: 
--------------------------------------------------------------------------------
  166:             return usableTimes
  167:         if meetLength == 2:
  168:             return usableTimes[:9]
  169:         if meetLength == 3:
- 170:             return usableTimes[:8]
+ 170:             return usableTimes[:]
  171:     
  172:     avaTimes = []
  173:     addTime = True
  174:     if meetLength == 1:
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 127] SIR constaints: 
--------------------------------------------------------------------------------
  179:             if addTime:
  180:                 avaTimes.append(i)
  181:             addTime = True
  182:     elif meetLength == 2:
- 183:         for i in usableTimes[:9]:
+ 183:         for i in usableTimes[:]:
  184:             for j in daysBookings:
  185:                 if (j[7] == i or j[7] == str(
  186:                     (datetime.strptime(i, '%H:%M') + timedelta(hours=1)).strftime(
  187:                     '%H:%M'))):
--------------------------------------------------------------------------------
[0.00000 s] incompetent
   - [# 128] SIR constaints: 
--------------------------------------------------------------------------------
  191:             if addTime:
  192:                 avaTimes.append(i)
  193:             addTime = True
  194:     elif meetLength == 3:
- 195:         for i in usableTimes[:8]:
+ 195:         for i in usableTimes[:]:
  196:             for j in daysBookings:
  197:                 if \
  198:                     (j[7] == i or \
  199:                     j[7] == \
--------------------------------------------------------------------------------
[0.00000 s] incompetent
[*] Mutation score [1403.45984 s]: 0.0%
   - all: 128
   - killed: 0 (0.0%)
   - survived: 120 (93.8%)
   - incompetent: 8 (6.2%)
   - timeout: 0 (0.0%)
